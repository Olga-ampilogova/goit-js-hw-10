{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// spanday.classList.add('day-span')\r\n// Описаний в документації\r\nimport flatpickr from \"flatpickr\";\r\n// Додатковий імпорт стилів\r\nimport \"flatpickr/dist/flatpickr.min.css\";\r\nimport iziToast from \"izitoast\";\r\n// Додатковий імпорт стилів\r\nimport \"izitoast/dist/css/iziToast.min.css\";\r\n\r\nconst input = document.querySelector('input[type=\"text\"]');\r\ninput.classList.add(\"datetime-picker\");\r\nconst startButton = document.querySelector('[data-start]');\r\nstartButton.classList.add(\"start-button\");\r\nstartButton.disabled = true;\r\nconst spanDay = document.querySelector('[data-days]');\r\nconst spanSecond = document.querySelector('[data-seconds]');\r\nconst spanMinutes = document.querySelector('[data-minutes]')\r\nconst spanHoures = document.querySelector('[data-hours]');\r\n\r\nclass Timer {\r\n    #timerElement = null;\r\n    #time = 0;\r\n    #intervalId = null;\r\n    constructor(selector) {\r\n        this.#timerElement = document.querySelector(selector);\r\n    }\r\n\r\n    setTime(timeMs) {\r\n        this.#time = timeMs;\r\n    }\r\n\r\n    start() {\r\n        this.#time = this.#time - Date.now();\r\n        this.#intervalId = setInterval(() => {\r\n            this.#render();\r\n            this.#time -= 1000;\r\n            if (this.#time < 0) {\r\n                clearInterval(this.#intervalId);\r\n            }\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    #convertMs(ms) {\r\n        // Number of milliseconds per unit of time\r\n        const second = 1000;\r\n        const minute = second * 60;\r\n        const hour = minute * 60;\r\n        const day = hour * 24;\r\n\r\n        // Remaining days\r\n        const days = this.#pad(Math.floor(ms / day));\r\n        // Remaining hours\r\n        const hours = this.#pad(Math.floor((ms % day) / hour));\r\n        // Remaining minutes\r\n        const minutes = this.#pad(Math.floor(((ms % day) % hour) / minute));\r\n        // Remaining seconds\r\n        const seconds = this.#pad(Math.floor((((ms % day) % hour) % minute) / second));\r\n\r\n        return { days, hours, minutes, seconds }\r\n    }\r\n\r\n    #render() {\r\n        if (!this.#timerElement) return;\r\n        const { days, hours, minutes, seconds } = this.#convertMs(this.#time);\r\n        spanDay.textContent = days;\r\n        spanHoures.textContent = hours;\r\n        spanMinutes.textContent = minutes;\r\n        spanSecond.textContent = seconds;\r\n    }\r\n\r\n    #pad(value){\r\n        return String(value).padStart(2, \"0\");\r\n    }\r\n}\r\n\r\nlet userSelectedDate = new Date();\r\nconst timer = new Timer('.timer');\r\nconst options = {\r\n    enableTime: true,\r\n    dateFormat: \"Y-m-d H:i\",\r\n    time_24hr: true,\r\n    defaultDate: new Date(),\r\n    minuteIncrement: 1,\r\n    onClose(selectedDates) {\r\n        userSelectedDate = selectedDates[0];\r\n        const utcNow = Date.now();\r\n        if (userSelectedDate.getTime() <= utcNow) {\r\n            startButton.disabled = true;\r\n            iziToast.warning({\r\n                title: 'Caution',\r\n                position: 'topCenter',\r\n                message: 'Please choose a date in the future',\r\n            });\r\n        }\r\n        else\r\n        {\r\n            startButton.disabled = false;\r\n        }\r\n        console.log(userSelectedDate);\r\n    }\r\n}\r\n\r\nflatpickr(input, options);\r\n\r\nstartButton.addEventListener('click', (event) => {\r\n    event.preventDefault();\r\n    timer.setTime(userSelectedDate.getTime());\r\n    startButton.disabled = true;\r\n    timer.start();\r\n});\r\n"],"names":["input","startButton","spanDay","spanSecond","spanMinutes","spanHoures","Timer","selector","__privateAdd","_convertMs","_render","_pad","_timerElement","_time","_intervalId","__privateSet","timeMs","__privateGet","__privateMethod","render_fn","convertMs_fn","ms","days","pad_fn","hours","minutes","seconds","value","userSelectedDate","timer","options","selectedDates","utcNow","iziToast","flatpickr","event"],"mappings":"geASA,MAAMA,EAAQ,SAAS,cAAc,oBAAoB,EACzDA,EAAM,UAAU,IAAI,iBAAiB,EACrC,MAAMC,EAAc,SAAS,cAAc,cAAc,EACzDA,EAAY,UAAU,IAAI,cAAc,EACxCA,EAAY,SAAW,GACvB,MAAMC,EAAU,SAAS,cAAc,aAAa,EAC9CC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAa,SAAS,cAAc,cAAc,wBAExD,MAAMC,CAAM,CAIR,YAAYC,EAAU,CAoBtBC,EAAA,KAAAC,GAmBAD,EAAA,KAAAE,GASAF,EAAA,KAAAG,GAnDAH,EAAA,KAAAI,EAAgB,MAChBJ,EAAA,KAAAK,EAAQ,GACRL,EAAA,KAAAM,EAAc,MAEVC,EAAA,KAAKH,EAAgB,SAAS,cAAcL,CAAQ,EACvD,CAED,QAAQS,EAAQ,CACZD,EAAA,KAAKF,EAAQG,EAChB,CAED,OAAQ,CACJD,EAAA,KAAKF,EAAQI,EAAA,KAAKJ,GAAQ,KAAK,IAAG,GAClCE,EAAA,KAAKD,EAAc,YAAY,IAAM,CACjCI,EAAA,KAAKR,EAAAS,GAAL,WACAJ,EAAA,KAAKF,EAALI,EAAA,KAAKJ,GAAS,KACVI,EAAA,KAAKJ,GAAQ,GACb,cAAcI,EAAA,KAAKH,EAAW,CAErC,EAAE,GAAI,EAEV,CAiCL,CAtDIF,EAAA,YACAC,EAAA,YACAC,EAAA,YAqBAL,EAAA,YAAAW,EAAU,SAACC,EAAI,CAQX,MAAMC,EAAOJ,EAAA,KAAKP,EAAAY,GAAL,UAAU,KAAK,MAAMF,EAAK,KAAG,GAEpCG,EAAQN,EAAA,KAAKP,EAAAY,GAAL,UAAU,KAAK,MAAOF,EAAK,MAAO,IAAI,GAE9CI,EAAUP,EAAA,KAAKP,EAAAY,GAAL,UAAU,KAAK,MAAQF,EAAK,MAAO,KAAQ,GAAM,GAE3DK,EAAUR,EAAA,KAAKP,EAAAY,GAAL,UAAU,KAAK,MAASF,EAAK,MAAO,KAAQ,IAAU,GAAM,GAE5E,MAAO,CAAE,KAAAC,EAAM,MAAAE,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC3C,EAEDhB,EAAA,YAAAS,EAAO,UAAG,CACN,GAAI,CAACF,EAAA,KAAKL,GAAe,OACzB,KAAM,CAAE,KAAAU,EAAM,MAAAE,EAAO,QAAAC,EAAS,QAAAC,GAAYR,EAAA,KAAKT,EAAAW,GAAL,UAAgBH,EAAA,KAAKJ,IAC/DX,EAAQ,YAAcoB,EACtBjB,EAAW,YAAcmB,EACzBpB,EAAY,YAAcqB,EAC1BtB,EAAW,YAAcuB,CAC5B,EAEDf,EAAA,YAAAY,EAAI,SAACI,EAAM,CACP,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACvC,EAGL,IAAIC,EAAmB,IAAI,KAC3B,MAAMC,EAAQ,IAAIvB,EAAM,QAAQ,EAC1BwB,EAAU,CACZ,WAAY,GACZ,WAAY,YACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBH,EAAmBG,EAAc,GACjC,MAAMC,EAAS,KAAK,MAChBJ,EAAiB,QAAS,GAAII,GAC9B/B,EAAY,SAAW,GACvBgC,EAAS,QAAQ,CACb,MAAO,UACP,SAAU,YACV,QAAS,oCACzB,CAAa,GAIDhC,EAAY,SAAW,GAE3B,QAAQ,IAAI2B,CAAgB,CAC/B,CACL,EAEAM,EAAUlC,EAAO8B,CAAO,EAExB7B,EAAY,iBAAiB,QAAUkC,GAAU,CAC7CA,EAAM,eAAc,EACpBN,EAAM,QAAQD,EAAiB,QAAS,CAAA,EACxC3B,EAAY,SAAW,GACvB4B,EAAM,MAAK,CACf,CAAC"}